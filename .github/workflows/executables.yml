name: Build and Release Executables

on:
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install PyInstaller
      run: pip install pyinstaller

    - if: runner.os == 'Windows'
      name: Install UPX
      run: choco install upx

    - name: Build executable
      run: |
        pyinstaller -F \
          --exclude-module bz2 \
          --exclude-module calendar \
          --exclude-module cgi \
          --exclude-module dbm \
          --exclude-module difflib \
          --exclude-module email \
          --exclude-module gzip \
          --exclude-module http \
          --exclude-module inspect \
          --exclude-module multiprocessing \
          --exclude-module pickle \
          --exclude-module pydoc \
          --exclude-module sqlite3 \
          --exclude-module turtle \
          --exclude-module unittest \
          --exclude-module urllib \
          --exclude-module xml \
          --exclude-module zlib \
          --exclude-module lzma \
          --exclude-module asyncio \
          --exclude-module concurrent \
          --exclude-module http.server \
          --exclude-module xml.dom \
          --exclude-module xml.sax \
          --exclude-module pdb \
          --exclude-module trace \
          --exclude-module doctest \
          --exclude-module unittest.mock \
          --exclude-module email.mime \
          --exclude-module xmlrpc \
          --exclude-module socketserver \
          --exclude-module ftplib \
          --exclude-module telnetlib \
          --exclude-module smtplib \
          --exclude-module http.cookies \
          --exclude-module xmlrpc.client \
          --exclude-module zipfile \
          nc.py
      shell: bash

    - name: Rename executable
      run: |
        if [[ ${{ runner.os }} == "Linux" ]]; then
          mv dist/nc dist/nc-linux
        elif [[ ${{ runner.os }} == "macOS" ]]; then
          mv dist/nc dist/nc-macos
        fi
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: nc-${{ matrix.os }}
        path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true

    - name: List downloaded files
      run: ls -lh

    - name: Upload executables
      uses: softprops/action-gh-release@v2
      with:
        files: |
          nc.exe
          nc-linux
          nc-macos
        token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
